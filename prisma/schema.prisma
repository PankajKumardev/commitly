generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String?       @unique
  name         String?
  githubId     String?       @unique
  password     String?
  auth_type    Boolean       @default(false)
  issues       Issue[]
  pullRequests PullRequest[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Issue {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  status       Status        @default(Open)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  pullRequests PullRequest[] @relation("IssuePullRequest")

  IssuePullRequest IssuePullRequest[]
}

model PullRequest {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      PRStatus @default(Open)
  merged      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  issues      Issue[]  @relation("IssuePullRequest")

  IssuePullRequest IssuePullRequest[]
}

model IssuePullRequest {
  issueId       Int
  pullRequestId Int

  issue       Issue       @relation(fields: [issueId], references: [id])
  pullRequest PullRequest @relation(fields: [pullRequestId], references: [id])

  @@id([issueId, pullRequestId])
}

enum Status {
  Open
  InProgress
  Closed
}

enum IssueStatus {
  Open
  InProgress
  Closed
}

enum PRStatus {
  Open
  Merged
  Closed
}

enum AuthType {
  Github
  Email
}
